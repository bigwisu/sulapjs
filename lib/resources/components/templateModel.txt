import React, { useState, useEffect } from 'react';
import { Container, Table, Button, Row, Col, Modal, Form } from 'react-bootstrap'
import RowTable from './RowTableNewModel';
import axios from '../api/database';
import Toast from './ToastComponent'

function //model-name (props) {

    const [ showModal, setShowModal ] = useState(false)
    const [ rowTable, setRowTable ] = useState([])
    //header-table
     const [ search, setSearch ] = useState('')
    //state
    
    //function-loop
    //state-object

    //toast
    const [ text, setText ] = useState('')
    const [ status, setStatus ] = useState(false)
    const [ showToast, setShowToast ] = useState(false) 

   function submitForm(e){
        e.preventDefault()

        axios.post('///model-lower-cases', stateObj, { headers: { token:localStorage.getItem('token')}})
        .then(({data}) => {
            setRowTable([...rowTable, data.new//model-name])
            setText('success add')
            setStatus(true)
            setShowToast(true)
        })
        .catch(err => {
            setText(err.response.data.message)
            setStatus(false)
            setShowToast(true)
        })

        let tempRow = [ ...rowTable, stateObj ]
        setRowTable(tempRow)
        funcLoop.map( func => (
            func(null)
        ))
        handleClose()
    }

    function handleClose() {
        setShowModal(false);
    }
    
    function handleShow() {
        setShowModal(true);
    }

    useEffect(() => {
        axios.get('///model-lower-cases', { headers: { token: localStorage.getItem('token')}})
        .then(({data}) => {
            if(data.//model-names){
                setRowTable(data.//model-names)
            }
        })
        .catch(err =>{
            setText(err.response.data.message)
            setStatus(false)
            setShowToast(true)
        })
    }, [])

    return (
        <>
            <Toast text={text} status={ status } show={ showToast} set={ setShowToast }/>
            <Container fluid>
                <div style={{ padding:'30px' }}>
                    <Row>
                        <Col>
                            <h3> <span style={{ color:'grey' }}>#</span> Product </h3>
                        </Col>
                        <Col className='d-flex justify-content-end'>
                            <Button variant='outline-primary' onClick={ handleShow }> <i className="fas fa-plus"></i> Add New </Button>
                        </Col>
                    </Row>

                    <Form className='ml-3'>
                        <Row className='mt-3'>
                            <Col lg={3} style={{ padding:0 }}>
                                <Form.Group className='shadow-sm'>
                                    <Form.Control type="text" placeholder="Search..." />
                                </Form.Group>
                            </Col>
                            <Col lg={1}>
                                <Form.Group>
                                    <Button /*onClick={ submitSearch }*/ className='shadow-sm'><i className="fas fa-search"></i></Button>
                                </Form.Group>
                            </Col>
                        </Row>
                    </Form>
               
                    <div className='shadow-sm mt-3'>
                        <Table striped bordered hover>
                            <thead>
                                <tr>
                                    <th>#</th>
                                    { ['ID',...headerTable, 'UpdatedAt', 'CreatedAt'].map((el, index) =>{
                                        return <th key={ index }> {el} </th>
                                    })}
                                </tr>
                            </thead>
                            <tbody>
                                { rowTable.map( (row, index) => {
                                    return <RowTable value={ row } index={index} key={ index } key_model={ headerTable }/>
                                }) }
                            </tbody>
                        </Table>
                    </div>
                </div>
            </Container>

        <Form >
            <Modal show={showModal} onHide={handleClose}>
                <Modal.Header closeButton>
                    <Modal.Title>Add //model-name </Modal.Title>
                </Modal.Header>
                <Modal.Body>
                    { headerTable.map((el, index) => {
                        return  <Form.Group key={ index }>
                            <Form.Control type="text" placeholder={`Enter ${ el }`} onChange={ e => funcLoop[index]( e.target.value)}/>
                        </Form.Group>
                    }) }
                </Modal.Body>
                <Modal.Footer>
                    <Button variant="secondary" onClick={handleClose}>
                        Close
                    </Button>
                    <Button variant="primary" onClick={ submitForm }>
                        Save Changes
                    </Button>
                </Modal.Footer>
            </Modal>                                 
        </Form>               
        </>
    );
}

export default //model-name